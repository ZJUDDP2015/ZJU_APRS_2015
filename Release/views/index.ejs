<!DOCTYPE html>
<html>
<head>
<meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Map</title>
<link rel="stylesheet" href="/bower_components/bootstrap/dist/css/bootstrap.min.css">
<link rel="stylesheet" href="/css/index.css" type="text/css"/>
<script src="/bower_components/bootstrap/dist/js/bootstrap.min.js"></script>
<script src="/bower_components/jquery/dist/jquery.min.js"></script>
<script type="text/javascript" src="/symbols.js"> </script>
<script type="text/javascript" src="http://api.map.baidu.com/api?v=2.0&ak=xYBeNeqobNOPgiofCkvp1Ln6"></script>
<script type="text/javascript" src="http://developer.baidu.com/map/jsdemo/data/points-sample-data.js"> </script>
<script type="text/javascript" src="http://api.map.baidu.com/library/TextIconOverlay/1.2/src/TextIconOverlay_min.js"></script>
<script type="text/javascript" src="http://api.map.baidu.com/library/CurveLine/1.5/src/CurveLine.min.js"></script>
<script type="text/javascript" src="http://api.map.baidu.com/library/Heatmap/2.0/src/Heatmap_min.js"></script>
<script type="text/javascript">


    var points = new Array();
    var symbol = new Array();
    var line = new Array();
    var pointpaths = new Array();
    var starttime='';
    var endtime='';
    var callsign='';

    var m;  //点击产生的标记
    var click_lng;
    var click_lat;

    var map; //百度地图对象
    var centerPoint;
    var color = ["black", "red", "blue", "yellow", "green", "orange", "grey"];
    var lineColor = new Array();
    var countColor = 0;
    var lineInfo = new Array();
    var pointpaths = new Array();
    var callsignposition = new Array();


    function submit()
    {
        map.clearOverlays();
        starttime=document.getElementById('startTime').value;
        endtime=document.getElementById('endTime').value;
        callsign=document.getElementById('callSign').value;
    }
/*
    for (var i in data) {
        if (typeof(points[data[i].id]) == "undefined") {
            points[data[i].id] = new Array();
            points[data[i].id][0] = new BMap.Point(data[i].lat, data[i].lon);
            pointpaths[data[i].id] = new Array();
            pointpaths[data[i].id][0] = data[i].path;
            countColor = (countColor + 1) % 7;
            lineColor[data[i].id] = color[countColor];
            lineInfo[data[i].id] = {"source": data[i].id, "path": data[i].path, "time": data[i].time, "des": data[i].des };
            callsignposition[data[i].id] = {'lat':data[i].lat,'lon':data[i].lon};
        }
        else {
            points[data[i].id][points[data[i].id].length] = new BMap.Point(data[i].lat, data[i].lon);
            pointpaths[data[i].id][pointpaths[data[i].id].length] = data[i].path;
            callsignposition[data[i].id] = {'lat':data[i].lat,'lon':data[i].lon};
        }
        if (typeof(symbol[data[i].id]) == "undefined") {
            symbol[data[i].id] = data[i].symbol;
        }
    }
    //console.log(points)
    //console.log(symbol);
*/
function init() {

    //初始化地图,选取第一个点为起始点
    map = new BMap.Map("container");
    map.centerAndZoom(new BMap.Point(120.091444,30.307601),12);

    var myLoc = new BMap.LocalCity();

    myLoc.get(function(result) {
      map.setCenter(result.name);
    });

    map.enableScrollWheelZoom();
    map.addControl(new BMap.NavigationControl());
    map.addControl(new BMap.ScaleControl());
    map.addControl(new BMap.OverviewMapControl({isOpen: true}));

    //连接所有点
    //map.addOverlay(new BMap.Polyline(points, {strokeColor: "black", strokeWeight: 5, strokeOpacity: 1}));
/*
    for (var i in points) {
        var options = {
            size: BMAP_POINT_SIZE_SMALL,
            shape: BMAP_POINT_SHAPE_CIRCLE,
            color: '#d340c3'
        };
        var pointCollection = new BMap.PointCollection(points[i], options);
        map.addOverlay(pointCollection);

        //console.log(lineColor[i]);
        line[i] = new BMap.Polyline(points[i], {strokeColor: lineColor[i], strokeWeight: 1, strokeOpacity: 1});
        map.addOverlay(line[i]);

        var pt = points[i][0];
        //console.log(i);
        console.log(symbol[i]);
        var s=Symbol[symbol[i]];

        if (typeof(s)!="undefined")
        {
            var pic=s[0];
            console.log(s);
            console.log(i);
            var x=s[1];
            var y=s[2];

            if (pic==1) {
                 var myIcon = new BMap.Icon("/1.png", new BMap.Size(22,22),{
                 imageOffset: new BMap.Size(0-x, y)
               });
            }
            else {
                var myIcon = new BMap.Icon("/2.png", new BMap.Size(22,22),{
                 imageOffset: new BMap.Size(0-x, y)
               });
            }
            var marker2 = new BMap.Marker(pt,{icon:myIcon});  // 创建标注
            map.addOverlay(marker2);
                 // 将标注添加到地图中
        }
    }


    for (var i in points){
        line[i].info = lineInfo[i];
        line[i].onclick = function(){
            map.removeOverlay(m);
            var p = new BMap.Point(click_lng,click_lat);
            m = new BMap.Marker(p);
            var l = new BMap.Label("", {offset: new BMap.Size(-20, -20)});
            l.setContent("Longitude: " + p.lng + "<br>Latitude: " + p.lat
                + "<br>source:" + this.info.source + "<br>path:" + this.info.path + "<br>time:" + this.info.time + "<br>des:" + this.info.des);
            m.setLabel(l);
            map.addOverlay(m);
        //alert(click_lng + ' ' + click_lat);
        }
    }
*/

/*
  //鼠标移动到轨迹的点上显示path
  var markers = [];
  var coresps = [];
  var myIcon = new BMap.Icon("1.png", new BMap.Size(20,20));
  for (var i in points){
    for(var j in points[i]){
      var nmk = new BMap.Marker(points[i][j],{
        icon: myIcon
      });
      map.addOverlay(nmk);
      markers.push(nmk);
      coresps.push(pointpaths[i][j]);
    }
  }
  var digipeater, curve;
  for(var i in markers){
    markers[i].addEventListener('mouseover',function(e){
      digipeater = [];
      // add points of paths
      for(j in coresps[i]){
        var pp = new BMap.Point(callsignposition[coresps[i][j]].lat, callsignposition[coreps[i][j]].lon);
        digipeater.push(pp);
      }
      curve = new BMapLib.Curveline(digipeater,{strokeColor:"blue", strokeWeight:3, strokeOpacity:0.5});
      map.addOverlay(curve); // add curve into the map
    });
    markers[i].addEventListener('mouseout',function(e){
    map.removeOverlay(curve); //remove curve from the map
    });
  }
*/
    map.addEventListener("click",function(e){
        //alert("h");
      if(e.overlay && e.overlay.toString()==="null"){
        /*
        map.removeOverlay(m);
        alert("hello");
        var clicke = e;
        var p = new BMap.Point(e.point.lng, e.point.lat);
        m = new BMap.Marker(p);
        var l = new BMap.Label("", {offset: new BMap.Size(-20, -20)});
        l.setContent("Longitude: " + p.lng + "<br>Latitude: " + p.lat + "<br>source:" + clicke.point.source + "<br>path:" + clicke.point.path + "<br>time:" + clicke.point.time + "<br>des:" + clicke.point.des + "<br>comment:" + clicke.point.comment);
        m.setLabel(l);
        map.addOverlay(m);
        */
      } else{
        map.removeOverlay(m);
      }
    });
    setInterval(refreshRoute, 2000);
    setInterval(map.clearOverlays(),20000);
}

var heatmapOverlay;
var heatmap_config = {
    "radius": 40,
    "visible": true,
    "maxOpacity": 1,
    "minOpacity": 0,
    "gradient": {
      0:'rgb(102, 255, 0)',
      .5:'rgb(255, 170, 0)',
      1:'rgb(255, 0, 0)'
    }
};

function refreshRoute_ZoomOut() {
    points = [];

  	var bs = map.getBounds();
  	var bssw = bs.getSouthWest();
    var bsne = bs.getNorthEast();

  	var level = 9-map.getZoom();

  	var lng_len = 0.1;
    var lat_len = 0.1;
    var incre = (1<<level);

    var lng_num = Math.floor((bssw.lng+180)/lng_len);
    var lat_num = Math.floor((bssw.lat+90)/lat_len);

    var col_num=(Math.floor((bsne.lng+180)/lng_len)-lng_num+1)/incre;
    var row_num=(Math.floor((bsne.lat+90)/lat_len)-lat_num+1)/incre;

    //console.log("Gap: "+(bsne.lat-bssw.lat));

    $.get("/data_zoomout", {"level":level ,"lng_num":lng_num , "lat_num":lat_num , "col_num":col_num , "row_num":row_num ,"starttime":starttime,"endtime":endtime,"callsign":callsign},function(result){
    	map.clearOverlays();
    	symbol = [];
    	var points = [];
    	var count = 0;
    	for (var i=0;i<row_num;++i){
    		for (var j=0;j<col_num;++j){
    			var lat=lat_len*(lat_num+incre*i+0.5)-90;
    			var lng=lng_len*(lng_num+incre*j+0.5)-180;
    			if (result[i][j]>0){
    				points.push({"lng":lng,"lat":lat,"count":result[i][j]});
    				count+=result[i][j];
    			}
    		}
    	}
    	if (map.getZoom()<10){
  		  heatmapOverlay = new BMapLib.HeatmapOverlay(heatmap_config);
  			map.addOverlay(heatmapOverlay);
  			heatmapOverlay.setDataSet({data:points,max:count/10});
    	}
	});
}

function refreshRoute() {

	if (map.getZoom()<10){
		refreshRoute_ZoomOut();
		return;
	}

    var bs = map.getBounds();
    var bssw = bs.getSouthWest();
    var bsne = bs.getNorthEast();
    //var myIcon2 = new BMap.Icon("/3.png", new BMap.Size(20,20));
    //var digipeater, curve;
    //console.log(starttime);
    //console.log(endtime);
    //console.log(callsign);
    //console.log(bssw.lng + ", " + bssw.lat + " to " + bsne.lng + ", " + bsne.lat + "\n");

    var allOverlay = map.getOverlays();
    for (i in allOverlay) {
      if ((i.lat < bssw.lat) || (i.lon < bssw.lon) || (i.lat > bsne.lat) || (i.lon > bsne.lon)) {
        map.removeOverlay(i);
      }
    }

    $.get("/data", {"sw_lng": bssw.lng, "sw_lat": bssw.lat, "ne_lng": bsne.lng, "ne_lat": bsne.lat,"starttime":starttime,"endtime":endtime,"callsign":callsign}
    ,function(result) {
    	//callsignposition = [];
    	map.removeOverlay(heatmapOverlay);
        var pts = new Array();
        //symbol=[];
        //points.length=0;
        //markers = [];
        //lineInfo = [];
    	//pointpaths = [];
    	//callsignposition = [];
        //console.log(result);
        for (var i in result) {
            $.getJSON("http://api.map.baidu.com/geoconv/v1/?coords="+result[i].lat+","+result[i].lon+"&from=3&to=5&ak=qE02zgmFr4DFG0me1Q6hL73t&output=json&callback=?", function(result){
		result[i].lat = result.result[0].x;
		result[i].lon = result.result[0].y;
	    });	
            if (typeof(points[result[i].id]) == "undefined") {
                points[result[i].id] = new Array();
                points[result[i].id][0] = new BMap.Point(result[i].lat, result[i].lon);

                points[result[i].id][0].path = result[i].path;
                points[result[i].id][0].source = result[i].id;
                points[result[i].id][0].time = result[i].time;
                points[result[i].id][0].des = result[i].des;
                points[result[i].id][0].comment = result[i].comment;

                if ((typeof(callsignposition[result[i].id]) == 'undefined') || (result[i].time>callsignposition[result[i].id].time))
                  callsignposition[result[i].id] = {'lat':result[i].lon,'lng':result[i].lat,'time':result[i].time};//<iy> create callsign index
                countColor = (countColor + 1) % 7;
                lineColor[result[i].id] = color[countColor];
                lineInfo[result[i].id] = {"source": result[i].id, "path": result[i].path, "time": result[i].time, "des": result[i].des };
                pts.push(points[result[i].id][0]);
            }
            else {
                var same = 0;
                for (j in points[result[i].id]) {
                  //console.log(points[result[i].id][j]);
                  //console.log(points[result[i].id][j].lat + '  ' + points[result[i].id][j].lon + "   J")
                  //console.log(result[i].lat + '  ' +result[i].lon);
                  if ((points[result[i].id][j].lng == result[i].lat) && (points[result[i].id][j].lat == result[i].lon)) {
                    same = 1;
                    break;
                  }
                }
                //console.log(same);
                if (same == 0) {

                  points[result[i].id][points[result[i].id].length] = new BMap.Point(result[i].lat, result[i].lon);

                  points[result[i].id][points[result[i].id].length - 1].path = result[i].path;
                  points[result[i].id][points[result[i].id].length - 1].source = result[i].id;
                  points[result[i].id][points[result[i].id].length - 1].time = result[i].time;
                  points[result[i].id][points[result[i].id].length - 1].des = result[i].des;
                  points[result[i].id][points[result[i].id].length - 1].comment = result[i].comment;

                  if ((callsignposition[result[i].id] == undefined) || (result[i].time>callsignposition[result[i].id].time))
                    callsignposition[result[i].id] = {'lat':result[i].lon,'lng':result[i].lat,'time':result[i].time};//<iy> create callsign index
                  pts.push(points[result[i].id][points[result[i].id].length - 1]);
                  /*
                  if (points[result[i].id][points[result[i].id].length-1].lat != points[result[i].id][points[result[i].id].length-2].lat||points[result[i].id][points[result[i].id].length-1].lng != points[result[i].id][points[result[i].id].length-2].lng){
                    var nmk = new BMap.Marker(points[result[i].id][points[result[i].id].length - 1]);
                    //markers.push(nmk);
                    nmk.addEventListener('mouseover',function(e){
                      digipeater = [];
                      // add points of paths
                      var paths = JSON.parse(result[i].path);
                      var pp = new BMap.Point(result[i].lat, result[i].lon);
                      digipeater.push(pp);
                      for(j in paths){
                        pp = new BMap.Point(callsignposition[paths[j]].lat, callsignposition[paths[j]].lon);
                        digipeater.push(pp);
                      }
                      curve = new BMapLib.CurveLine(digipeater,{strokeColor:"blue", strokeWeight:3, strokeOpacity:0.5});
                      map.addOverlay(curve); // add curve into the map
                    });
                  }
                  */

                  line[result[i].id] = new BMap.Polyline(
                                              [ points[result[i].id][points[result[i].id].length - 2],
                                              points[result[i].id][points[result[i].id].length - 1] ],
                                              {strokeColor: lineColor[result[i].id], strokeWeight: 3, strokeOpacity: 3}
                                          );

                  //console.log(line[result[i].id]);
                  map.addOverlay(line[result[i].id]);
                  /*
                  line[result[i].id].info = lineInfo[result[i].id];
                  line[result[i].id].onclick = function(){
                      map.removeOverlay(m);
                      var p = new BMap.Point(click_lng,click_lat);
                      m = new BMap.Marker(p);
                      var l = new BMap.Label("", {offset: new BMap.Size(-20, -20)});
                      l.setContent("Longitude: " + p.lng + "<br>Latitude: " + p.lat
                          + "<br>source:" + this.info.source + "<br>path:" + this.info.path + "<br>time:" + this.info.time + "<br>des:" + this.info.des);

                      m.setLabel(l);
                      map.addOverlay(m);
                  }
                  */
                }
                if (typeof(symbol[result[i].id]) == "undefined") {
                	//console.log(result[i].symbol);
                    symbol[result[i].id] = result[i].symbol;
                    var pt = points[result[i].id][0];
                    var s=Symbol[symbol[result[i].id]];
						//alert("Great");

                    if (typeof(s)!="undefined")
                    {
                        var pic=s[0];
                        //console.log(s);
                        //console.log(i);
                        var x=s[1];
                        var y=s[2];
						var myIcon;

                        if (pic==1) {
                             myIcon = new BMap.Icon("/1.png", new BMap.Size(22,22),{
                             imageOffset: new BMap.Size(0-x, 0-y)
                           });
                        }
                        else {
                            myIcon = new BMap.Icon("/2.png", new BMap.Size(22,22),{
                             imageOffset: new BMap.Size(0-x, 0-y)
                           });
                        }
                        var marker2 = new BMap.Marker(pt,{icon:myIcon});  // 创建标注
                        map.addOverlay(marker2);
						            var mymarker = new BMap.Point(result[i].lat+0.000001, result[i].lon+0.000001);
						            var marker3 = new BMap.Marker(mymarker, {icon:myIcon});

                        //markers.push(marker3);
						            //markers.push(marker3);
						            //alert(result[i].lat+" "+result[i].lon);
                    }else{

                        //markers.push(new BMap.Marker(pt));
                    }

                } else {

				          }

            }

        }

        if (pts.length != 0) {

            var options = {
                size: BMAP_POINT_SIZE_SMALL,
                shape: BMAP_POINT_SHAPE_CIRCLE,
                color: '#d340c3'
            };
            var pointCollection = new BMap.PointCollection(pts, options);
            map.addOverlay(pointCollection);

            pointCollection.addEventListener('click', function (e) {
              //alert('单击点的坐标为：' + e.point.lng + ',' + e.point.lat);  // 监听点击事件
              map.removeOverlay(m);
              //alert("hello");

              var p = new BMap.Point(e.point.lng, e.point.lat);
              /*m = new BMap.Marker(p);
              var l = new BMap.Label("", {offset: new BMap.Size(-20, -20)});
              //l.setContent("Longitude: " + p.lng + "<br>Latitude: " + p.lat
               //       + "<br>source:<a href='/callsign?name=" + e.point.source + "' target='_blank'>" + e.point.source + "</a><br>path:" + e.point.path + "<br>time:" + e.point.time + "<br>des:" + e.point.des + "<br>comment:" + e.point.comment);

              m.setLabel(l);
              map.addOverlay(m);*/
              var opts = {
 					width : 350,     // 信息窗口宽度
 					height: 165,     // 信息窗口高度
 					title : "呼号: " + e.point.source  // 信息窗口标题
				}
			  var table = "<table border='0' > <tr>" + "<td width='200px'>经度: " + p.lng + "</td>" + "<td>纬度: " + p.lat + "</td></tr>" + "<tr>" + "<td width='200px'>路径: " + "<a href='/path?name=" + e.point.path + "' target='_blank'>" + e.point.path + "</a>" + "</td>" + "<td>目的地: " + e.point.des + "</td></tr></table>" + "时间: " + e.point.time +
			  				"<br>注释: " + e.point.comment + "<br><br>" + "　　　 　　　　　　" + "<a href='/callsign?name=" + e.point.source + "' target='_blank'>" + "查看详细信息" + "</a>";
			  var m = new BMap.InfoWindow(table, opts);  // 创建信息窗口对象
			  map.openInfoWindow(m, e.point);      // 打开信息窗口

            });

			var digipeater = [];
            //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!      ＴＨＩＳ ＰＡＲＴ ＣＡＮ ＮＯＴ ＢＥ　ＲＥＭＯＶＥＤ
            pointCollection.addEventListener('mouseover',function (e){
            	var out = "";
            	var paths = JSON.parse(e.point.path);
            	//alert(paths+' type:'+typeof(paths));
            	//alert(out+' type:'+typeof(out));
            	//alert(pts.length);
            	/*for(var j in pts){
            		out += pts[j].path +" "+pts[j].source+'\n';
            	}*/
            	var pp = new BMap.Point(e.point.lng, e.point.lat);

            	digipeater.push(pp);
            	//这里的paths并不是数组（和说好的不一样），所以会报错
            	for (var j in paths){
            		//alert(paths[j]);
            		if(typeof(callsignposition[paths[j]]) !== 'undefined' && paths[j]!=e.point.source){
            			//console.log(callsignposition[paths[j]] !== 'undefined');
            			pp = new BMap.Point(callsignposition[paths[j]].lng, callsignposition[paths[j]].lat);
            			digipeater.push(pp);
            		}
            		//out += callsignposition[paths[j]].lng+' '+callsignposition[paths[j]].lat+'\n';
            	}//------------------------------------* /
            	//digipeater.push(new BMap.Point(callsignposition[paths].lng, callsignposition[paths].lat));
            	//digipeater.push(new BMap.Point(pts[2].lng, pts[2].lat));
            	if(digipeater.length>1){
            		curve = new BMapLib.CurveLine(digipeater,{strokeColor:"blue", strokeWeight:3, strokeOpacity:0.5});
                	map.addOverlay(curve); // add curve into the map
                }
                //alert(out);
            })
            pointCollection.addEventListener('mouseout',function (e){
            	if(digipeater.length>1)
            		map.removeOverlay(curve);
            	digipeater = [];
            })
       }
        //markerClusterer=new BMapLib.MarkerClusterer(map,{GridSize:10,markers:markers});
    });
}

function login_post(){
  $.post('/login', {
    "email" : $("#email").val(),
    "pw": $("#pw").val(),
  }, function(data) {
    if (data.code==0){
      $('#login_button').toggle();
      $('#logout_button').toggle();
      $('#signup_button').toggle();
      $('#change_pw_button').toggle();
      $('#uploadForm').toggle();
      $('#login_form').hide();
      $('#signup_form').hide();
      $("#login-result").html("");
      $.get('/getSavedPosition',function(data){
        var point = new BMap.Point(data.py,data.px);
        map.setCenter(point);
      })
    }else{
      
    }
    $("#login-result").html(data.message);
  });
  return false;
} 

function signup_post(){
  $.post('/register', {
    "email" : $("#email_signup").val(),
    "pw": $("#pw_signup").val(),
    "repw": $("#repw").val()
  }, function(data) {
    if (data.code==0){
      $("#signup-result").html("");
    }else{
      
    }
    $("#signup-result").html(data.message);
  });
  return false;
} 

function change_pw_post(){
  $.post('/changePassword', {
    "opw" : $("#opw").val(),
    "npw": $("#npw").val(),
    "renpw": $("#renpw").val()
  }, function(data) {
    if (data.code==0){
      $("#change_pw-result").html("");
    }else{
      
    }
    $("#change_pw-result").html(data.message);
  });
  return false;
} 

function logout(){
  var center = map.getCenter();
  $.post('/post_position',{
    "px":center.lat,
    "py":center.lng
  },function(){

  })
  $.get('/logout', function(data) {
    if (data.code==0){
      $('#uploadForm').toggle();
      $('#login_button').toggle();
      $('#logout_button').toggle();
      $('#signup_button').toggle();
      $('#change_pw_button').toggle();
      $('#change_pw_form').hide();
      $("#login-result").html("");
      var center = map.getCenter();
      
    }else{
      
    }
    //$("#change_pw-result").html(data.message);
  });
  return false;
} 

$(window).unload(function(){
  var center = map.getCenter();
  $.post('/post_position',{
    "px":center.lat,
    "py":center.lng
  },function(){

  })
});

</script>
</head>


<body style="overflow:hidden" onload="init();">
    <div id="container" style="position: absolute; top:0; width:100%; height:100%; border:none; z-index:0"></div>
    <input type='checkbox' id='sideToggle'>
    <aside>
        <div id='banner'>
            <!--Please Replace this part with BANNER-->
            <img src="/uploads/default.png" width="180" alt="Sample Logo" />
        </div>
        <p></p>
        <hr width=80% style="margin:auto">
        <table class='timeSelect'>
            <tr>
                <td>Start Time</td>
                <td>
                    <input class='timeSelectInput' id='startTime' type="text" name="Meow" width="100px" value="2015-06-01 06:00:00">
                </td>
            </tr>
            <tr>
                <td>End Time</td>
                <td>
                    <input class='timeSelectInput' id='endTime' type="text" name="Meow" width="100px" value="2015-06-30 06:00:00">
                </td>
            </tr>
            <tr>
                <td>Callsign</td>
                <td>
                    <input class='timeSelectInput' id='callSign' type="text" name="Meow" width="100px" value="BA5AG">
                </td>
            </tr>
        </table>
        <div class='button' onclick="submit()">Show on Map!</div>
        <hr width=80% style="margin:auto">
        <!--User Panel-->
        <div class="button" id="login_button" onclick="$('#login_form').toggle()">Login</div>
        <div id="login_form" hidden>
          <table class='timeSelect'>
              <tr>
                  <td>Email</td>
                  <td>
                      <input class='timeSelectInput' id="email" type="text" width="100px" required></input>
                  </td>
              </tr>
              <tr>
                  <td>Password</td>
                  <td>
                      <input class='timeSelectInput' id="pw" type="password" width="100px" required></input>
                  </td>
              </tr>    
          </table>
          <div id="login-result" align="center"></div>
          <div class='button' onclick="login_post()">Submit</div>
          <hr width=80% style="margin:auto">
        </div>
        <div class="button" id="signup_button" onclick="$('#signup_form').toggle()">Sign up</div>
        <div id="signup_form" hidden>
          <table class='timeSelect'>
              <tr>
                  <td>Email</td>
                  <td>
                      <input class='timeSelectInput' id="email_signup" type="text" width="100px" required></input>
                  </td>
              </tr>
              <tr>
                  <td>Password</td>
                  <td>
                      <input class='timeSelectInput' id="pw_signup" type="password" width="100px" required></input>
                  </td>
              </tr> 
              <tr>
                  <td>Confirm Password</td>
                  <td>
                      <input class='timeSelectInput' id="repw" type="password" width="100px" required></input>
                  </td>
              </tr>     
          </table>
          <div id="signup-result" align="center"></div>
          <div class='button' onclick="signup_post()">Submit</div>
        </div>

        <div class="button" id="logout_button" onclick="logout()" hidden>Log out</div>
        <!--Please add the user control and date/time/function select panel here-->
        <div class="button" id="change_pw_button" onclick="$('#change_pw_form').toggle()" hidden>Change password</div>
        <form   id      = "uploadForm"
                enctype = "multipart/form-data"
                action  = "/photoUpload"
                method  = "post" class='middle'
                hidden>
                <div class='button'>Change Banner
                    <input id='buttonFile' type="file"   name="userPhoto" onchange="submit()"/>
                    <!--use onchange to perform the upload-->
                </div>
        </form>
        <div id="change_pw_form" hidden>
          <table class='timeSelect'>
              <tr>
                  <td>old Password</td>
                  <td>
                      <input class='timeSelectInput' id="opw" type="password" width="100px" required></input>
                  </td>
              </tr> 
              <tr>
                  <td>new Password</td>
                  <td>
                      <input class='timeSelectInput' id="npw" type="password" width="100px" required></input>
                  </td>
              </tr> 
              <tr>
                  <td>Confirm new Password</td>
                  <td>
                      <input class='timeSelectInput' id="renpw" type="password" width="100px" required></input>
                  </td>
              </tr>     
          </table>
          <div id="change_pw-result" align="center"></div>
          <div class='button' onclick="change_pw_post()">Submit</div>
        </div>
    </aside>
    <div id='wrap'>
        <label id='sideMenuControl' for='sideToggle'>=</label>
    </div>
</body>

</html>
